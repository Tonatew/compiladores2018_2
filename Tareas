        Tareas
1. Ventajas de las posiciones prefijas y posfijas con respecto a la infija
  Notación prefija o polaca
  Notación posfija o polaca inversa
  
2. Representación de números negativos en binario
        Existen 4 formas
                1. Magnitud y signo
                2. Complemento a la base menos uno
                3. Complemento a dos o complemento a la base
                4. En exceso a K
        Ejemplo de magnitud y signo
                Supongamos, que tenemos que representar el número -971(decimal). Procedemos a:
                1. Tomar nota del signo del número reducido o simplificado -97, que siendo negativo, llevará como bit de signo un 1;
                2. Realizar la conversión: el valor absoluto de -97 es |-97| = 97. Que en binario es: 1100001;
                3. Colocar todo junto, el número -97 en binario con formato de Signo y Magnitud es: 11100001. 
                   Donde el 1 en el bit más significativo indica un número negativo, y 1100001 es el significando en valor absoluto.
        Ejemplo de complemento a la base menos uno
                Supongamos, que tenemos que representar el número -97. Procedemos a:
                1. Tomar nota del signo del número -97, que siendo negativo, llevará como bit de signo un 1;
                2. Como el signo es negativo, el número a continuación del bit de signo, deberá expresarse en complemento a uno.
                   Al realizar la conversión: el valor absoluto de -97 es |-97| = 97. 
                   Que en binario es: 1100001, y el complemento a uno de 1100001 es C1(1100001) = 0011110;
                3. Colocar todo junto, el número -97 en binario con formato de Complemento a uno es: 10011110. 
                   Donde el 1 en el bit más significativo indica un número negativo, y 00111102 es el significando 
                   en complemento a uno del valor absoluto del número.
        Ejemplo de complemento a dos
                Supongamos, que tenemos que representar el número -97. Procedemos a:
                1. Tomar nota del signo del número -97, que siendo negativo, llevará como bit de signo un 1;
                2. Como el signo es negativo, el número a continuación del bit de signo, deberá expresarse en complemento a dos. 
                   Al realizar la conversión: el valor absoluto de -97 es |-97| = 97. Que en binario es: 1100001, 
                   y el complemento a uno de 1100001 es C1(1100001) = 0011110, le sumamos uno para obtener el 
                   complemento a dos: 0011110 + 0000001 = 0011111;
        Ejemplo de en exceso K
                Supongamos, que tenemos que representar el número -97 (decimal). Procedemos a:
                1. Tomar el número -97 y sumarle el exceso, en este caso 128, luego -97 + 128 = 31;
                2. Convertimos a binario, en este caso. Luego, 31 = 00011111.
        
3. ¿por qué un byte es igual a 8 bits?
        En un inicio cada fabricante ocupaba un número indistinto de bits para representar un byte, 
        pero siendo que las computadoras cada vez eran más utilizadas y comenzaba a ser cada vez más 
        necesaria interoperabilidad entre las mismas,
        Bob Bemer propone crear un standard para la representación de caracteres al American National Standards Institute (ANSI). 
        Así es como en 1963 se crea el código ASCII (American Standard Code for Information Interchange). 
        El código ASCII original utilizaba 7 bits para un total de 128 caracteres posibles. 
        Rápidamente se hizo evidente que era una limitación y se empezó a trabajar con códigos de 8 bits. 
        Cada fabricante utilizaba extensiones de ASCII propias y los 8 bits se hicieron corrientes.
        Y fue en Agosto de 1981 cuando el destino del Byte como sinónimo de 8 bits tuvo un inevitable empuje. 
        La IBM 5150, más conocida como la IBM PC (Personal Computer) salió al mercado, transformándose al poco tiempo en la arquitectura 
        dominante de la industria. Utilizando el microprocesador Intel 8088 de 8bits 
        (aunque ya estaba disponible para la época el 8086 de 16bits de mejores prestaciones, aunque también más costoso) 
        dió paso a una familia de productos y derivados con gran éxito de ventas y una cantidad de clones que inundaron el mercado.
        
